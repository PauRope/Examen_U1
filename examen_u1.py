# -*- coding: utf-8 -*-
"""Examen U1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XczMqnRBEwLjNe1xsIB0IIeWh7lriaXL

Ejercicio 1. **¿Es un numero primo?.**
"""

def es_primo(numero):
    if numero > 1:
        for i in range(2, int(numero/2)+1):
            if (numero % i) == 0:
                return False
        return True
    else:
        return False

"""Ejercicio 2. **¿El siguiente es primo?.**"""

def es_primo(numero):
    if numero < 2:
        return False
    for i in range(2, int(numero**0.5) + 1):
        if numero % i == 0:
            return False
    return True

def siguiente_numero_primo(numero):
    if numero < 2:
        return 2
    prime = numero + 1
    while True:
        if es_primo(prime):
            return prime
        prime += 1

"""Ejercicio 3. **La mediana de 3 valores.**"""

class Calcular_Mediana_3:
    @staticmethod
    def Calcular_Mediana_3(num1, num2, num3):
        # Pondremos los 3 números
        numeros3 = [num1, num2, num3]
        # Se ordenan en forma de lista
        numeros3.sort()
        # Se encuentra el número medio
        mediana = numeros3[1]
        return mediana

"""Ejercicio 4. **Contraseña random (aleatoria).**"""

import random
import string

class Contraseña_Random: #creamos clase
    @staticmethod
    def genera_contra():
        # Longitud entre 7 y 10 caracteres
        largo_contra = random.randint(7, 10)

        # Genera contraseña aleatoria
        contraseña = ''.join(random.choice(string.printable[33:126]) for _ in range(largo_contra))

        return contraseña

"""Ejercicio 5. **Calcula la hipotenusa.**"""

class Hipotenusa_Triangulo: #definimos la clase y su funacion a utilizar
    def __init__(self, lado1, lado2): #self lo definiremos como el primer parametro a usar en instancia.
        self.lado1 = lado1 #Aqui ya tenemos parametro 1 y 2
        self.lado2 = lado2

    def calcular_hipotenusa(self):
        Hip = (self.lado1**2 + self.lado2**2)**0.5 #formula para sacar hipotenuss mediante pitagoras
        return Hip